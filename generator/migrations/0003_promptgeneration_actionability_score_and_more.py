# Generated by Django 5.2.4 on 2025-07-26 06:24

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('generator', '0002_promptgeneration_generated_prompt'),
    ]

    operations = [
        migrations.AddField(
            model_name='promptgeneration',
            name='actionability_score',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='age_group_category',
            field=models.CharField(blank=True, choices=[('Early_Childhood', 'Ages 3-5'), ('Primary', 'Ages 6-11'), ('Lower_Secondary', 'Ages 12-14'), ('Upper_Secondary', 'Ages 15-18'), ('Adult', 'Adult Learners'), ('Mixed', 'Mixed Age Groups')], max_length=30),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='assessment_integration',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='blooms_keywords_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='complexity_level',
            field=models.CharField(blank=True, choices=[('Basic', 'Simple, straightforward tasks'), ('Intermediate', 'Moderate complexity'), ('Advanced', 'Complex, multi-step processes'), ('Expert', 'Highly sophisticated approaches')], max_length=20),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='cross_curricular_connections',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='days_since_last_visit',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='differentiation_strategies',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='edit_count_before_copy',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='field_change_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='form_completion_time',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='form_start_time',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='help_visited_before',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='inclusion_indicators',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='innovation_level',
            field=models.CharField(blank=True, choices=[('Conservative', 'Prefers traditional methods'), ('Moderate', 'Balanced approach'), ('Innovative', 'Embraces new methodologies'), ('Experimental', 'Cutting-edge approaches')], max_length=20),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='is_repeat_visitor',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='methodology_category',
            field=models.CharField(blank=True, choices=[('Direct_Instruction', 'Teacher-led, explicit instruction'), ('Inquiry_Based', 'Student exploration and discovery'), ('Problem_Based', 'Real-world problem solving'), ('Collaborative', 'Group work and peer learning'), ('Project_Based', 'Extended project work'), ('Differentiated', 'Adaptive/personalized learning'), ('Assessment_Focused', 'Evaluation and feedback'), ('Technology_Enhanced', 'Digital tool integration')], max_length=50),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='originality_score',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='pedagogical_keywords_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='practical_relevance_score',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='prompt_complexity_score',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='prompt_edited_after_generation',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='prompt_sentence_count',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='prompt_sophistication_trend',
            field=models.CharField(blank=True, choices=[('Declining', 'Less sophisticated over time'), ('Stable', 'Consistent level'), ('Improving', 'More sophisticated over time'), ('Fluctuating', 'Variable quality')], max_length=20),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='prompt_word_count',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='session_sequence_number',
            field=models.IntegerField(default=1),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='specificity_score',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='student_centeredness_score',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='subject_category',
            field=models.CharField(blank=True, choices=[('STEM', 'Science, Technology, Engineering, Math'), ('Humanities', 'Language Arts, Social Studies, History'), ('Arts', 'Creative Arts, Music, Drama'), ('PE_Health', 'Physical Education & Health'), ('Vocational', 'Career & Technical Education'), ('Cross_Curricular', 'Multiple Subjects'), ('Other', 'Other/Unspecified')], max_length=50),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='template_switches',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='theory_adoption_score',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='theory_integration_score',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='time_spent_reviewing',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='tpack_keywords_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='promptgeneration',
            name='udl_keywords_count',
            field=models.IntegerField(default=0),
        ),
    ]
